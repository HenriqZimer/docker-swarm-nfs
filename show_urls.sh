#!/bin/bash

# üåê Script para mostrar URLs de acesso de todos os servi√ßos
# Autor: Docker Swarm Setup
# Data: $(date)

echo "üåê ================================================"
echo "   URLS DE ACESSO DOS SERVI√áOS"
echo "   Docker Swarm Infrastructure"
echo "================================================"
echo ""

# Verificar se est√° no Swarm
if ! docker info --format '{{.Swarm.LocalNodeState}}' | grep -q active; then
    echo "‚ùå ERRO: Docker Swarm n√£o est√° ativo!"
    exit 1
fi

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

echo -e "${BLUE}üìä MONITORAMENTO & ANALYTICS${NC}"
echo "=================================="
echo -e "‚Ä¢ ${GREEN}Grafana${NC}     - ${CYAN}http://localhost:3000${NC}     - admin / (ver grafana_admin_password.txt)"
echo -e "‚Ä¢ ${GREEN}Zabbix${NC}      - ${CYAN}http://localhost:8080${NC}     - Admin / zabbix"
echo ""

echo -e "${BLUE}üîÑ AUTOMA√á√ÉO & CI/CD${NC}"
echo "=================================="
echo -e "‚Ä¢ ${GREEN}N8N${NC}         - ${CYAN}http://localhost:5678${NC}     - Basic Auth (ver secrets)"
echo -e "‚Ä¢ ${GREEN}Jenkins${NC}     - ${CYAN}http://localhost:9002${NC}     - admin / Jenkins123!"
echo -e "‚Ä¢ ${GREEN}ArgoCD${NC}      - ${CYAN}http://localhost:9003${NC}     - admin / ArgoCD123!"
echo -e "‚Ä¢ ${GREEN}ArgoCD HTTPS${NC} - ${CYAN}https://localhost:9443${NC}    - admin / ArgoCD123!"
echo ""

echo -e "${BLUE}üîí SEGURAN√áA & GEST√ÉO${NC}"
echo "=================================="
echo -e "‚Ä¢ ${GREEN}Vaultwarden${NC} - ${CYAN}http://localhost:80${NC}       - Criar conta"
echo -e "‚Ä¢ ${GREEN}Harbor${NC}      - ${CYAN}http://localhost:9001${NC}     - admin / Harbor123!"
echo ""

echo -e "${BLUE}üê≥ GERENCIAMENTO${NC}"
echo "=================================="
echo -e "‚Ä¢ ${GREEN}Portainer${NC}   - ${CYAN}http://localhost:9000${NC}     - admin / (ver secret)"
echo ""

echo -e "${BLUE}üé¨ M√çDIA & ENTRETENIMENTO${NC}"
echo "=================================="
echo -e "‚Ä¢ ${GREEN}Jellyfin${NC}     - ${CYAN}http://localhost:8096${NC}      - Setup inicial via interface web"
echo -e "‚Ä¢ ${GREEN}qBittorrent${NC} - ${CYAN}http://localhost:8080${NC}     - admin / (ver logs para senha inicial)"
echo ""

echo -e "${BLUE}üìã STATUS DOS SERVI√áOS${NC}"
echo "=================================="

# Verificar status dos servi√ßos
services=(
    "grafana"
    "zabbix" 
    "n8n"
    "vaultwarden"
    "portainer"
    "cloudflared"
    "harbor"
    "jenkins"
    "argocd"
    "jellyfin"
    "qbittorrent"
)

for service in "${services[@]}"; do
    if docker stack services "$service" &>/dev/null; then
        replicas=$(docker service ls --filter name="$service" --format "{{.Replicas}}" | head -1)
        if [[ "$replicas" =~ ^[1-9] ]]; then
            echo -e "‚Ä¢ ${GREEN}‚úÖ $service${NC} - $replicas"
        else
            echo -e "‚Ä¢ ${RED}‚ùå $service${NC} - $replicas"
        fi
    else
        echo -e "‚Ä¢ ${RED}‚ùå $service${NC} - N√£o deployado"
    fi
done

echo ""
echo -e "${YELLOW}üí° DICAS:${NC}"
echo "‚Ä¢ Use 'make status' para ver status detalhado"
echo "‚Ä¢ Use 'make logs-<service>' para ver logs espec√≠ficos"
echo "‚Ä¢ Use 'make deploy-<service>' para deployar servi√ßo espec√≠fico"
echo "‚Ä¢ Use 'make stop-<service>' para parar servi√ßo espec√≠fico"
echo ""

echo -e "${PURPLE}üîó INTEGRA√á√ÉO ENTRE SERVI√áOS:${NC}"
echo "‚Ä¢ Jenkins ‚Üí Harbor (Push de imagens)"
echo "‚Ä¢ Jenkins ‚Üí ArgoCD (Deploy autom√°tico)" 
echo "‚Ä¢ ArgoCD ‚Üí Harbor (Pull de imagens)"
echo "‚Ä¢ Grafana ‚Üê Zabbix (Dashboards de monitoramento)"
echo "‚Ä¢ N8N ‚Üî Todos (Automa√ß√£o e integra√ß√µes)"
echo "‚Ä¢ qBittorrent ‚Üí Jellyfin (Downloads autom√°ticos para biblioteca de m√≠dia)"
echo ""

echo -e "${CYAN}üåç Para expor via Cloudflare Tunnel:${NC}"
echo "Adicione no arquivo cloudflared/docker-compose.yml:"
echo "  - hostname: harbor.seudominio.com"
echo "    service: http://harbor_proxy:8080"
echo "  - hostname: jenkins.seudominio.com"  
echo "    service: http://jenkins_jenkins:8080"
echo "  - hostname: argocd.seudominio.com"
echo "    service: http://argocd_argocd-server:8080"
echo "  - hostname: jellyfin.seudominio.com"
echo "    service: http://jellyfin_app:8096"
echo "  - hostname: qbittorrent.seudominio.com"
echo "    service: http://qbittorrent_app:8080"
echo ""
